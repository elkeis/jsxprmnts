{"version":3,"sources":["pages/ImageSlice/rick-and-morty.png","components/ImageSlice/sliceMath.js","components/ImageSlice/ImageSlice.js","components/ImageSlice/index.js","pages/ImageSlice/initialData.js","components/PropertyControls/PropertyControls.js","components/PropertyControls/index.js","components/CSSEditor/CSSEditor.js","components/CSSEditor/index.js","pages/ImageSlice/ImageSlice.js","pages/ImageSlice/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","toRad","deg","Math","PI","ImageSlice","sliceClassName","sliceClassNames","push","join","cssValues","v","width","concat","w","height","h","W","H","transform","dX","dY","alpha","sW","sH","margin","overflow","i","dx","dy","backgroundImage","this","props","url","backgroundSize","n","cosA","abs","cos","sinA","sin","calculateCssValues","sliceCount","sliceAngle","buildSliceClassNames","sliceClass","slices","react_default","a","createElement","className","style","buildSliceStyle","key","buildSliceBackgroundStyle","buildImageSliceStyle","buildPhotoContainerSliceStyle","Component","SLICE_CSS","initialData","imageSlice","imageUrl","css","PropertyControls","name","value","type","onChange","buildOnChangeFunction","propertyName","_this","event","Object","defineProperty","target","renderTextControl","renderDigitControl","CSSEditor","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","setState","setCSS","bind","GLITCH_STYLE","SPLIT_STYLE","DRUNK_STYLE","ImageSlicePage","objectSpread","propsObj","setImageSliceProps","href","components_ImageSlice","components_PropertyControls","assign","onClick","setGlitchStyle","setSplitStyle","setDrunkStyle","components_CSSEditor","App","pages_ImageSlice","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.00df510f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rick-and-morty.e232eb84.png\";","function toRad(deg) {\n    return deg * Math.PI / 180;\n}\n\n/**\n * \n * @param {*} w width of photo \n * @param {*} h height of photo\n * @param {*} n number of slices\n * @param {*} alpha angle of cut\n */\nexport function calculateCssValues (w, h, n, alpha) {\n    if (alpha < 0) {\n        alpha = 360 + alpha % 360\n    }\n    const cosA = Math.abs(Math.cos(toRad(alpha)));\n    const sinA = Math.abs(Math.sin(toRad(alpha)));\n    const H = h * cosA + w * sinA;\n    const W = w * cosA + h * sinA;\n    const dX = - (W - w) / 2;\n    const dY = - (H - h) / 2; \n    const dx = [];\n    const dy = [];\n    const sW = W;\n    const sH = H/n;\n    for (let i = 0; i < n; i++) {\n        dy.push(-sH*i - dY);\n        dx.push(-dX);\n    }\n    return {w, h, n, alpha, cosA, sinA, H, W, dX, dY, dx, dy, sH, sW };\n}","import React, {Component} from 'react';\nimport {calculateCssValues} from './sliceMath';\n\nconst DEFAULT_SLICE_CLASS_NAME = 'slice';\n\nclass ImageSlice extends Component {\n\n    buildSliceClassNames(sliceClassName) {\n        let sliceClassNames = [DEFAULT_SLICE_CLASS_NAME];\n        if (sliceClassName && sliceClassName !== DEFAULT_SLICE_CLASS_NAME ) {\n            sliceClassNames.push(sliceClassName);\n        }\n        return sliceClassNames.join(' ');\n    }\n\n    buildImageSliceStyle(cssValues) {\n        const v = cssValues;\n        return  {\n            width: `${v.w}px`,\n            height: `${v.h}px`,\n        };\n    }\n\n    buildPhotoContainerSliceStyle(cssValues) {\n        const v = cssValues;\n        return {\n            width: `${v.W}px`,\n            height: `${v.H}px`,\n            transform: `translate3d(${v.dX}px, ${v.dY}px, 0) rotate(-${v.alpha}deg)`,\n        };\n    }\n\n    buildSliceStyle(cssValues) {\n        const v = cssValues;\n        return {\n            width: `${v.sW}px`,\n            height: `${v.sH + 1}px`,\n            margin: '-1px 0px',\n            overflow: 'hidden'\n        };\n    }\n\n    buildSliceBackgroundStyle(cssValues, i) {\n        const v = cssValues;\n        let s = {\n            width: `${v.w}px`,\n            height: `${v.h}px`,\n            transform: `translate3d(${v.dx[i]}px, ${v.dy[i]}px, 0) rotate(${v.alpha}deg)`,\n            backgroundImage: `url(${this.props.url})`,\n            backgroundSize: `${v.w}px ${v.h}px`\n        };\n        return s;\n    }\n\n    render() {\n        const v = calculateCssValues(\n            this.props.width,\n            this.props.height,\n            this.props.sliceCount,\n            this.props.sliceAngle\n        );\n        const sliceClassNames = this.buildSliceClassNames(this.props.sliceClass);\n        const slices = [];\n        for (let i = 0; i < v.n; i++) {\n            slices.push(\n                <div className={sliceClassNames} style={this.buildSliceStyle(v)} key={i}>\n                    <div className=\"slice-background\" style={this.buildSliceBackgroundStyle(v, i)}></div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"ImageSlice\" style={this.buildImageSliceStyle(v)}>\n                <div className=\"photo-container\" style={this.buildPhotoContainerSliceStyle(v)}>\n                    {slices}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ImageSlice;","import ImageSlice from './ImageSlice';\nexport default ImageSlice;\n\n","import imageUrl from './rick-and-morty.png';\n\nexport const SLICE_CLASS = 'image-slice';\nexport const DRUNK_SLICE_CLASS='drunk-image-slice';\nconst SLICE_CSS = `@keyframes slice-glitch {\n    0% {\n        transform: translateX(0);\n    }\n    30% {\n        transform: translateX(-5px);\n    }\n    60% {\n        transform: translateX(5px);\n    }\n    100% {\n        transform: translateX(0);\n    }\n    \n}\n        \n        \n.${SLICE_CLASS}:nth-child(odd) {\n    filter: hue-rotate(45deg);\n    animation: slice-glitch .2s linear .0s infinite alternate;\n}\n.${SLICE_CLASS}:nth-child(even) {\n        filter: hue-rotate(-45deg);\n        animation: slice-glitch .2s linear .1s infinite alternate;\n}\n\n@keyframes drunk-style {\n    0% {\n        transform: translateX(0);\n    }\n    50%{\n       transform: translateX(-5px);\n    }\n    100% {\n        transform: translateX(0px);\n    }\n    \n}\n        \n        \n.${DRUNK_SLICE_CLASS}:nth-child(5n+0) {\n    animation: drunk-style .5s ease-in-out .0s infinite;\n}\n.${DRUNK_SLICE_CLASS}:nth-child(5n+1) {\n    animation: drunk-style .5s ease-in-out .1s infinite;\n}\n.${DRUNK_SLICE_CLASS}:nth-child(5n+2) {\n        animation: drunk-style .5s ease-in-out .2s infinite;\n}\n.${DRUNK_SLICE_CLASS}:nth-child(5n+3) {\n    animation: drunk-style .5s ease-in-out .3s infinite;\n}\n.${DRUNK_SLICE_CLASS}:nth-child(5n+4) {\n        animation: drunk-style .5s ease-in-out .4s infinite;\n}`;\n\nexport default {\n    imageSlice: {\n        url: imageUrl,\n        width: 510,\n        height: 260,\n        sliceCount: 2,\n        sliceAngle: 76,\n        sliceClass: SLICE_CLASS\n    },\n    css: SLICE_CSS\n}","import React, {Component} from 'react';\n\nclass PropertyControls extends Component {\n\n    renderDigitControl(name, value) {\n        return (\n            <div className=\"control-item\">\n                <label>{name}</label>\n                <input type=\"number\" value={value} onChange={this.buildOnChangeFunction(name)}></input>\n            </div>\n        )\n    }\n\n    renderTextControl(name, value) {\n        return (\n            <div className=\"control-item\">\n                <label>{name}</label>\n                <input type=\"text\" value={value} onChange={this.buildOnChangeFunction(name)}></input>\n            </div>\n        )\n    }\n\n    buildOnChangeFunction(propertyName) {\n        const onChange = (event) => {\n            this.props.onChange({\n                [propertyName]: event.target.value \n            });\n        };\n        return onChange;\n    } \n\n    render() {\n        return (\n            <div className=\"property-controls\">\n                {this.renderTextControl('url', this.props.url)}\n                {this.renderTextControl('sliceClass', this.props.sliceClass)}\n                {this.renderDigitControl('width', this.props.width)}\n                {this.renderDigitControl('height', this.props.height)}\n                {this.renderDigitControl('sliceCount', this.props.sliceCount)}\n                {this.renderDigitControl('sliceAngle', this.props.sliceAngle)}\n            </div>\n        )\n    }\n}\n\nexport default PropertyControls;","import PropertyControls from './PropertyControls';\nimport './PropertyControls.scss';\n\nexport default PropertyControls;","import React, {Component} from 'react';\n\nclass CSSEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            css: props.css\n        };\n    }\n    \n    setCSS(event) {\n        this.setState({\n            css: event.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"CSSEditor\">\n                <textarea value={this.state.css} onChange={this.setCSS.bind(this)}></textarea>\n                <style>{this.state.css}</style>\n            </div>\n        );\n    }\n}\n\nexport default CSSEditor;","import CSSEditor from './CSSEditor';\nimport './CSSEditor.scss';\n\nexport default CSSEditor;","import React, {Component} from 'react';\nimport ImageSlice from '../../components/ImageSlice';\nimport initialData, {DRUNK_SLICE_CLASS, SLICE_CLASS} from './initialData';\nimport PropertyControls from '../../components/PropertyControls';\nimport CSSEditor from '../../components/CSSEditor';\n\nconst GLITCH_STYLE = {\n    sliceAngle: 195,\n    sliceCount: 26,\n    sliceClass: SLICE_CLASS\n}\nconst SPLIT_STYLE = {\n    sliceAngle: 76,\n    sliceCount: 2,\n    sliceClass: SLICE_CLASS\n}\n\nconst DRUNK_STYLE = {\n    sliceCount: 36,\n    sliceAngle: -37,\n    sliceClass: DRUNK_SLICE_CLASS\n}\n\nclass ImageSlicePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageSlice: {\n                ...initialData.imageSlice\n            },\n            css: initialData.css\n        }\n    }\n\n    setImageSliceProps(propsObj) {\n        this.setState({\n            imageSlice: {...this.state.imageSlice, ...propsObj}\n        });\n    }\n\n    setGlitchStyle() {\n        this.setImageSliceProps(GLITCH_STYLE);\n    }\n\n    setSplitStyle() {\n        this.setImageSliceProps(SPLIT_STYLE);\n    }\n\n    setDrunkStyle() {\n        this.setImageSliceProps(DRUNK_STYLE);\n    }\n\n    render() {\n        return (\n            <div className=\"image-slice-page\">\n                <div className=\"component-area\">\n                    <h1>ImageSlice component</h1>\n                    <p>Image sliced in <code>N</code> pieces at different angle. \n                    Use controls and CSS editor to play with effects.</p>\n                    <p><a href=\"https://github.com/elkeis/jsxprmnts\">source</a></p>\n                    \n                    <div className=\"image-container\">\n                        <div className=\"image\">\n                            <ImageSlice\n                                {...this.state.imageSlice}\n                            >\n                            </ImageSlice>\n                        </div>\n                    </div>\n                    <div className=\"component-property-controls\">\n                        <PropertyControls \n                            {...this.state.imageSlice}\n                            onChange={this.setImageSliceProps.bind(this)}\n                        >\n                        </PropertyControls>\n                        <button onClick={this.setGlitchStyle.bind(this)}>glitch</button>\n                        <button onClick={this.setSplitStyle.bind(this)}>split</button>\n                        <button onClick={this.setDrunkStyle.bind(this)}> drunk</button>\n                    </div>\n                </div>\n                <div className=\"styles-area\">\n                    <CSSEditor\n                        css={this.state.css}\n                    ></CSSEditor>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ImageSlicePage;","import ImageSlicePage from './ImageSlice';\nimport './ImageSlice.scss';\nexport default ImageSlicePage;","import React, { Component } from 'react';\nimport './App.scss';\nimport ImageSlicePage from './pages/ImageSlice';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <ImageSlicePage></ImageSlicePage>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}